{"version":3,"names":["_sfc_main","name","props","modelValue","type","Array","required","default","addTime","Number","String","idKey","mixins","common_vendor","mpMixin","mixin","data","leftList","rightList","tempList","children","watch","copyFlowList","nVal","oVal","length","clear","startIndex","isArray","concat","cloneData","slice","splitData","mounted","computed","emits","methods","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","leftRect","rightRect","item","wrap","_callee$","_context","prev","next","abrupt","$uGetRect","sent","height","push","splice","setTimeout","stop","JSON","parse","stringify","bak","arguments","undefined","$emit","remove","id","_this2","index","findIndex","val","modify","key","value","_this3","wx","createComponent","Component"],"sources":["u-waterfall.vue","D:/Program Files/HBuilderX/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovbXktdnVlL3VuaS1hcHAvdHJhdmVsX3VuaWFwcC9ub2RlX21vZHVsZXMvdXZpZXctcGx1cy9jb21wb25lbnRzL3Utd2F0ZXJmYWxsL3Utd2F0ZXJmYWxsLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"u-waterfall\">\r\n        <view ref=\"u-left-column\" id=\"u-left-column\" class=\"u-column\">\r\n            <slot name=\"left\" :leftList=\"leftList\"></slot>\r\n        </view>\r\n        <view ref=\"u-right-column\" id=\"u-right-column\" class=\"u-column\">\r\n            <slot name=\"right\" :rightList=\"rightList\"></slot>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n    /**\r\n     * waterfall 瀑布流\r\n     * @description 这是一个瀑布流形式的组件，内容分为左右两列，结合uview的懒加载组件效果更佳。相较于某些只是奇偶数左右分别，或者没有利用vue作用域插槽的做法，uview的瀑布流实现了真正的 组件化，搭配LazyLoad 懒加载和loadMore 加载更多组件，让您开箱即用，眼前一亮。\r\n     * @tutorial https://uview-plus.jiangruyi.com/components/waterfall.html\r\n     * @property {Array} flow-list 用于渲染的数据\r\n     * @property {String Number} add-time 单条数据添加到队列的时间间隔，单位ms，见上方注意事项说明（默认200）\r\n     * @example <u-waterfall :flowList=\"flowList\"></u-waterfall>\r\n     */\r\n    import { mpMixin } from '../../libs/mixin/mpMixin';\r\n\timport { mixin } from '../../libs/mixin/mixin';\r\n    export default {\r\n        name: \"u-waterfall\",\r\n        props: {\r\n            // #ifdef VUE2\r\n            value: {\r\n                // 瀑布流数据\r\n                type: Array,\r\n                required: true,\r\n                default: function() {\r\n                    return [];\r\n                }\r\n            },\r\n            // #endif\r\n            // #ifdef VUE3\r\n            modelValue: {\r\n                // 瀑布流数据\r\n                type: Array,\r\n                required: true,\r\n                default: function() {\r\n                    return [];\r\n                }\r\n            },\r\n            // #endif\r\n            // 每次向结构插入数据的时间间隔，间隔越长，越能保证两列高度相近，但是对用户体验越不好\r\n            // 单位ms\r\n            addTime: {\r\n                type: [Number, String],\r\n                default: 200\r\n            },\r\n            // id值，用于清除某一条数据时，根据此idKey名称找到并移除，如数据为{idx: 22, name: 'lisa'}\r\n            // 那么该把idKey设置为idx\r\n            idKey: {\r\n                type: String,\r\n                default: 'id'\r\n            }\r\n        },\r\n        mixins: [mpMixin, mixin],\r\n        data() {\r\n            return {\r\n                leftList: [],\r\n                rightList: [],\r\n                tempList: [],\r\n                children: []\r\n            }\r\n        },\r\n        watch: {\r\n            copyFlowList(nVal, oVal) {\r\n                if (!nVal || nVal.length == 0) {\r\n                    this.clear(false);\r\n                    // console.log('clear');\r\n                } else {\r\n                    // 取差值，即这一次数组变化新增的部分\r\n                    let startIndex = Array.isArray(oVal) && oVal.length > 0 ? oVal.length : 0;\r\n                    // 拼接上原有数据\r\n                    this.tempList = this.tempList.concat(this.cloneData(nVal.slice(startIndex)));\r\n                    this.splitData();\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.tempList = this.cloneData(this.copyFlowList);\r\n            this.splitData();\r\n        },\r\n        computed: {\r\n            // 破坏flowList变量的引用，否则watch的结果新旧值是一样的\r\n            copyFlowList() {\r\n                // #ifdef VUE3\r\n                if (!this.modelValue || this.modelValue.length == 0) {\r\n                    this.clear(false);\r\n                    // console.log('clear');\r\n                    return [];\r\n                } else {\r\n                    return this.cloneData(this.modelValue);\r\n                }\r\n                // #endif\r\n                // #ifdef VUE2\r\n                return this.cloneData(this.value);\r\n                // #endif\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        methods: {\r\n            async splitData() {\r\n                if (!this.tempList.length) return;\r\n                let leftRect = await this.$uGetRect('#u-left-column');\r\n                let rightRect = await this.$uGetRect('#u-right-column');\r\n                // 如果左边小于或等于右边，就添加到左边，否则添加到右边\r\n                let item = this.tempList[0];\r\n                // 解决多次快速上拉后，可能数据会乱的问题，因为经过上面的两个await节点查询阻塞一定时间，加上后面的定时器干扰\r\n                // 数组可能变成[]，导致此item值可能为undefined\r\n                if (!item) return;\r\n                if (leftRect.height < rightRect.height) {\r\n                    this.leftList.push(item);\r\n                } else if (leftRect.height > rightRect.height) {\r\n                    this.rightList.push(item);\r\n                } else {\r\n                    // 这里是为了保证第一和第二张添加时，左右都能有内容\r\n                    // 因为添加第一张，实际队列的高度可能还是0，这时需要根据队列元素长度判断下一个该放哪边\r\n                    if (this.leftList.length <= this.rightList.length) {\r\n                        this.leftList.push(item);\r\n                    } else {\r\n                        this.rightList.push(item);\r\n                    }\r\n                }\r\n                // 移除临时列表的第一项\r\n                this.tempList.splice(0, 1);\r\n                // 如果临时数组还有数据，继续循环\r\n                if (this.tempList.length) {\r\n                    setTimeout(() => {\r\n                        this.splitData();\r\n                    }, this.addTime)\r\n                }\r\n            },\r\n            // 复制而不是引用对象和数组\r\n            cloneData(data) {\r\n                return JSON.parse(JSON.stringify(data));\r\n            },\r\n            // 清空数据列表\r\n            clear(bak = true) {\r\n                this.leftList = [];\r\n                this.rightList = [];\r\n                // 同时清除父组件列表中的数据\r\n                if (bak) {\r\n                    // #ifdef VUE2\r\n                    this.$emit('input', []);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    this.$emit('update:modelValue', []);\r\n                    // #endif\r\n                }\r\n                this.tempList = [];\r\n            },\r\n            // 清除某一条指定的数据，根据id实现\r\n            remove(id) {\r\n                // 如果findIndex找不到合适的条件，就会返回-1\r\n                let index = -1;\r\n                index = this.leftList.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) {\r\n                    // 如果index不等于-1，说明已经找到了要找的id，根据index索引删除这一条数据\r\n                    this.leftList.splice(index, 1);\r\n                } else {\r\n                    // 同理于上方面的方法\r\n                    index = this.rightList.findIndex(val => val[this.idKey] == id);\r\n                    if (index != -1) this.rightList.splice(index, 1);\r\n                }\r\n                // 同时清除父组件的数据中的对应id的条目\r\n                // #ifdef VUE2\r\n                index = this.value.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) this.$emit('input', this.value.splice(index, 1));\r\n                // #endif\r\n                // #ifdef VUE3\r\n                index = this.modelValue.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) this.$emit('update:modelValue', this.modelValue.splice(index, 1));\r\n                // #endif\r\n            },\r\n            // 修改某条数据的某个属性\r\n            modify(id, key, value) {\r\n                // 如果findIndex找不到合适的条件，就会返回-1\r\n                let index = -1;\r\n                index = this.leftList.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) {\r\n                    // 如果index不等于-1，说明已经找到了要找的id，修改对应key的值\r\n                    this.leftList[index][key] = value;\r\n                } else {\r\n                    // 同理于上方面的方法\r\n                    index = this.rightList.findIndex(val => val[this.idKey] == id);\r\n                    if (index != -1) this.rightList[index][key] = value;\r\n                }\r\n                // 修改父组件的数据中的对应id的条目\r\n                // #ifdef VUE2\r\n                index = this.value.findIndex(val => val[this.idKey] == id);\r\n                // #endif\r\n                // #ifdef VUE3\r\n                index = this.modelValue.findIndex(val => val[this.idKey] == id);\r\n                // #endif\r\n                if (index != -1) {\r\n                    // 首先复制一份value的数据\r\n                    // #ifdef VUE2\r\n                    let data = this.cloneData(this.value);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    let data = this.cloneData(this.modelValue);\r\n                    // #endif\r\n                    // 修改对应索引的key属性的值为value\r\n                    data[index][key] = value;\r\n                    // 修改父组件通过v-model绑定的变量的值\r\n                    // #ifdef VUE2\r\n                    this.$emit('input', data);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    this.$emit('update:modelValue', data);\r\n                    // #endif\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import \"../../libs/css/components.scss\";\r\n\r\n    .u-waterfall {\r\n        @include flex;\r\n        flex-direction: row;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    .u-column {\r\n        @include flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n        /* #ifndef APP-NVUE */\r\n        height: 100%;\r\n        /* #endif */\r\n    }\r\n\r\n    .u-image {\r\n        /* #ifndef APP-NVUE */\r\n        max-width: 100%;\r\n        /* #endif */\r\n    }\r\n</style>\r\n","import Component from 'E:/my-vue/uni-app/travel_uniapp/node_modules/uview-plus/components/u-waterfall/u-waterfall.vue'\nwx.createComponent(Component)"],"mappings":"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","ignoreList":[]}